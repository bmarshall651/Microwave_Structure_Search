clear all;
close all;
clc;

figure(1)

% Create a uicontrol of type "text"
% mTextBox = uicontrol('style','text')
% set(mTextBox,'String','Hello World')
% To move the the Text Box around you can set and get the position of Text 
%Box itself
%mTextBoxPosition = get(mTextBox,'Position')
% The array mTextBoxPosition has four elements
% [x y length height]
% Something that I find useful is to set the Position Units to Characters, 
%set(mTextBox,'Units','characters')
% This means a Text Box with 3 lines of text will have a height of 3

%filen='THESIS_Hybrid_DoubleSym_Coarse_RnadAfterBadGen_2.mat';
%filen='THESIS_Microstrip_1Cost_Sym.mat';
%Thesis_Microstrip_1Cost_Sym.mat
%THESIS_Hybrid_DoubleSym_Coarse_RnadAfterBadGen_2.mat
%filen='THESISNO_Hybrid_DoubleSym_RandAfterBadGen.mat';
%filen='Data Sets/THESIS_Best_90deg_Hybrid_04_02_2017.mat';
filen='Data Sets/THESIS_Best_.mat';
load(filen);


x=1;
mTextBox = uicontrol('style','text')
set(mTextBox,'Units','characters')
set(mTextBox,'Position', [0 0 100 50])
set(mTextBox, 'horizontalAlignment', 'left')

mTextBoxPosition = get(mTextBox,'Position')

jumpToEnd=0;

pause(10)

if jumpToEnd==1
    x=size(porMatrix,3);
end

tempSize=size(Sparams,1);


[aMinCost, aMinLoc]= min(cost);
    [ang0,mag0]=cart2pol(real(Sparams(:,:,2,aMinLoc)),imag(Sparams(:,:,2,aMinLoc)))
    angDeg_min=round(ang0*180/pi,2);
    magdB_min=round(20*log10(mag0),2);
 


%while(x<=size(porMatrix,3))
 while (x<=aMinLoc)   
    figure(1)
    title=filen;
    subplot(221)
    drawLens(porMatrix(:,:,x),unitWidth,portLocations, portWidth);
    subplot(222)
    plot(cost(1:x))
    ylabel('Cost');
    xlabel('Simulations');
    subplot(224)
    plot(coarseList)
    xlabel('Cycles');
    ylabel('Coarseness')
    
    [ang0,mag0]=cart2pol(real(Sparams(:,:,2,x)),imag(Sparams(:,:,2,x)))
    angDeg=round(ang0*180/pi,2);
    magdB=round(20*log10(mag0),2);
     [ang0_i,mag0_i]=cart2pol(real(Sideal(:,:,2)),imag(Sideal(:,:,2)));
    angDeg_i=round(ang0_i*180/pi,2);
    magdB_i=round(20*log10(mag0_i),2);
  
    
    testText=sprintf(['x-dimension: ', num2str(ydimNumofCells*unitWidth), ' mm\n', ...
    'y-dimension: ',num2str(xdimNumofCells*unitWidth), ' mm\n', ...
    'Total Unit Cells To Flip: ',num2str(totalMinors), '\n', ...
    'Port Width: ',num2str(portWidth*unitWidth), ' mm\n', ...
    'Port Boundaries Empty: ',num2str(portEmptyBorderCells), ' cells\n', ...
    'Dieletric Const: ',num2str(ER), ' mm\n', ...
    'Tan Delta: ',num2str(TAND), '\n', ...
    'Subst. Thickness: ',num2str(H), ' mm\n', ...
    'FREQ: ',num2str(FREQ/1E9), ' GHz\n', ...
    'unitWidth: ',num2str(unitWidth), ' mm\n', ...
    'x-Axis Symmetry?: ',num2str(xAxisSym), '\n', ...
    'y-Axis Symmetry?: ',num2str(yAxisSym), '\n', ...
    '\n', ...
    'Optimizer \n', ...
    'Type: ',optimizer, '\n', ...
    'Etching Only?: ',num2str(etchingOnly), '\n', ...
    'Coarseness?: ',num2str(coarseness), '\n', ...
    'Coarse List: ',num2str(coarseList), '\n', ...
    'Randomize Minors?: ',num2str(randomizeMinors), '\n', ...
    'Auto-Coarse List?: ',num2str(autoCoarseList), '\n', ...
    'Sideal: ',num2str(sum(timeHistory)), '\n', ...
    'Total Cycles: ',num2str(randomizeMinors), '\n', ...
    'Time Expired: ',num2str(floor(sum(timeHistory)/60/60/24)), ' days ', ...
    num2str(round(24*((sum(timeHistory)/60/60/24)-floor(sum(timeHistory)/60/60/24)),2)), 'hrs', ...
    '\n', ...
    'Cost \n', ...
    'Start Freq: ',num2str(startCostFreq), ' GHz\n', ...
    'Stop Freq: ',num2str(stopCostFreq), ' GHz\n', ...
     'Ideal SparamsdB: ',mat2str(magdB_i), ' dB\n', ...
    'Ideal SparamsDeg: ',mat2str(angDeg_i), ' deg\n', ...
     '\n', ...
    'Current Structure \n', ...
    'Iteration Number: ',mat2str(x), '\n', ...
    'SparamsdB: ',mat2str(magdB), ' dB\n', ...
    'SparamsDeg: ',mat2str(angDeg), ' deg\n', ...
    'Cost: ',mat2str(round(cost(x),2)), '\n', ...
    '\n', ...
    'BEST', '\n' ...
    'Lowest Cost:', num2str(aMinCost), '\n', ...
    'SparamsdB: ',mat2str(magdB_min), ' dB\n', ...
    'SparamsDeg: ',mat2str(angDeg_min), ' deg\n', ...
    ]);
    set(mTextBox,'String',testText)

   
    
    drawnow
    
    x=x+100;
 end

figure(2)
plot([5.6; 5.8; 6.0;],reshape(20*log10(abs(Sparams(1,1,:,aMinLoc))),[1,3]), ...
[5.6; 5.8; 6.0;],reshape(20*log10(abs(Sparams(1,2,:,aMinLoc))),[1,3]), ...
[5.6; 5.8; 6.0;],reshape(20*log10(abs(Sparams(1,3,:,aMinLoc))),[1,3]), ...
[5.6; 5.8; 6.0;],reshape(20*log10(abs(Sparams(1,4,:,aMinLoc))),[1,3]))
clear title xlabel ylabel
title('Frequency Response of S-parameters')
legend('S11','S12','S13','S14')
xlabel('Frequency (GHz)')
ylabel('dB')
